@startuml

title OCPP-BOOT Core Concept

participant "\tCommandOperations\t" as Sending #APPLICATION
participant " Offer " as Offer #IMPLEMENTATION
participant " Sender " as Sender #APPLICATION
participant "\t\tWebsocket\t\t\n" as Websocket 
participant " Receiver " as Receiver #APPLICATION
participant " Answer " as Answer #IMPLEMENTATION

note over Sending : (1) call send \n Command

Sending -> Sender : send()

activate Sender
note over Sender : (2) invoke offer 
Sender --> Offer : send<i><b> [Action] </b></i>Request()
note over Sender : (3) make ocpp call message \nwith return value of offer
Sender -> Receiver : \tCALL 
deactivate Sender


activate Receiver
note over Receiver : (4) invoke answer
Receiver --> Answer : received<i><b> [Action] </b></i>Request()
note over Receiver : (5) make ocpp call result or call error message\nwith return value or exception of answer
Receiver -> Sender : \t\t\t\t\tCALL ERROR \n \t\t\t\t\t\tor \n\t\t\t\t\tCALL RESULT 

activate Sender
note over Sender : (6) invoke offer
Sender --> Offer : received<i><b> [Action] </b></i>Response()
deactivate Sender

note over Receiver : (7) invoke answer
Receiver --> Answer : send<i><b> [Action] </b></i>Response()
deactivate Receiver

@enduml