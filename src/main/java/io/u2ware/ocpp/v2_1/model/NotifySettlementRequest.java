
package io.u2ware.ocpp.v2_1.model;

import java.time.ZonedDateTime;
import javax.annotation.processing.Generated;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import lombok.experimental.Accessors;
import lombok.experimental.SuperBuilder;

@JsonInclude(JsonInclude.Include.ALWAYS)
@SuperBuilder
@ToString
@Getter
@Accessors(fluent = true)
@NoArgsConstructor
@AllArgsConstructor
@JsonPropertyOrder({
    "transactionId",
    "pspRef",
    "status",
    "statusInfo",
    "settlementAmount",
    "settlementTime",
    "receiptId",
    "receiptUrl",
    "vatCompany",
    "vatNumber",
    "customData"
})
@Generated("jsonschema2pojo")
public class NotifySettlementRequest {

    /**
     * The _transactionId_ that the settlement belongs to. Can be empty if the payment transaction is canceled prior to the start of the OCPP transaction.
     * 
     * 
     * 
     */
    @JsonProperty("transactionId")
    @JsonPropertyDescription("The _transactionId_ that the settlement belongs to. Can be empty if the payment transaction is canceled prior to the start of the OCPP transaction.\r\n\r\n")
    @Size(max = 36)
    private String transactionId;
    /**
     * The payment reference received from the payment terminal and is used as the value for _idToken_. 
     * 
     * 
     * (Required)
     * 
     */
    @JsonProperty("pspRef")
    @JsonPropertyDescription("The payment reference received from the payment terminal and is used as the value for _idToken_. \r\n\r\n")
    @Size(max = 255)
    @NotNull
    private String pspRef;
    /**
     * The status of the settlement attempt.
     * 
     * 
     * (Required)
     * 
     */
    @JsonProperty("status")
    @JsonPropertyDescription("The status of the settlement attempt.\r\n\r\n")
    @NotNull
    private PaymentStatusEnum status;
    /**
     * Additional information from payment terminal/payment process.
     * 
     * 
     * 
     */
    @JsonProperty("statusInfo")
    @JsonPropertyDescription("Additional information from payment terminal/payment process.\r\n\r\n")
    @Size(max = 500)
    private String statusInfo;
    /**
     * The amount that was settled, or attempted to be settled (in case of failure).
     * 
     * 
     * (Required)
     * 
     */
    @JsonProperty("settlementAmount")
    @JsonPropertyDescription("The amount that was settled, or attempted to be settled (in case of failure).\r\n\r\n")
    @NotNull
    private Double settlementAmount;
    /**
     * The time when the settlement was done.
     * 
     * 
     * (Required)
     * 
     */
    @JsonProperty("settlementTime")
    @JsonPropertyDescription("The time when the settlement was done.\r\n\r\n")
    @NotNull
    private ZonedDateTime settlementTime;
    @JsonProperty("receiptId")
    @Size(max = 50)
    private String receiptId;
    /**
     * The receipt URL, to be used if the receipt is generated by the payment terminal or the CS.
     * 
     * 
     * 
     */
    @JsonProperty("receiptUrl")
    @JsonPropertyDescription("The receipt URL, to be used if the receipt is generated by the payment terminal or the CS.\r\n\r\n")
    @Size(max = 2000)
    private String receiptUrl;
    /**
     * *(2.1)* A generic address format.
     * 
     * 
     */
    @JsonProperty("vatCompany")
    @JsonPropertyDescription("*(2.1)* A generic address format.\r\n")
    @Valid
    private Address vatCompany;
    /**
     * VAT number for a company receipt.
     * 
     * 
     * 
     */
    @JsonProperty("vatNumber")
    @JsonPropertyDescription("VAT number for a company receipt.\r\n\r\n")
    @Size(max = 20)
    private String vatNumber;
    /**
     * This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.
     * 
     */
    @JsonProperty("customData")
    @JsonPropertyDescription("This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.")
    @Valid
    private CustomData customData;

}
